{"ast":null,"code":"var _jsxFileName = \"/home/bruna/Documentos/portfolio/projeto/trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport Loading from '../components/Loading';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Album extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      albums: [],\n      name: '',\n      nameAlbum: '',\n      loading: false,\n      favorite: []\n    };\n    this.albumMusics = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const music = await getMusics(id);\n      this.setState({\n        albums: music,\n        name: music[0].artistName,\n        nameAlbum: music[0].collectionName\n      });\n    };\n    this.handleChange = infoMusic => {\n      this.setState({\n        loading: true\n      }, async () => {\n        await addSong(infoMusic);\n        const listMusics = await getFavoriteSongs();\n        this.setState({\n          loading: false,\n          favorite: listMusics\n        });\n      });\n    };\n  }\n  async componentDidMount() {\n    this.albumMusics();\n  }\n  render() {\n    const {\n      albums,\n      name,\n      nameAlbum,\n      loading,\n      favorite\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"artist-name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"album-name\",\n        children: nameAlbum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n        children: albums.map(infoMusic => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: infoMusic.previewUrl !== undefined && /*#__PURE__*/_jsxDEV(MusicCard, {\n            infoMusic: infoMusic,\n            handleChange: () => this.handleChange(infoMusic),\n            check: favorite.some(music => infoMusic.trackId === music.trackId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)\n        }, infoMusic.trackId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n}\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"names":["React","PropTypes","Header","getMusics","MusicCard","Loading","addSong","getFavoriteSongs","Album","Component","state","albums","name","nameAlbum","loading","favorite","albumMusics","match","params","id","props","music","setState","artistName","collectionName","handleChange","infoMusic","listMusics","componentDidMount","render","map","previewUrl","undefined","some","trackId","propTypes","shape","string","isRequired"],"sources":["/home/bruna/Documentos/portfolio/projeto/trybetunes/src/pages/Album.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport Loading from '../components/Loading';\nimport { addSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass Album extends React.Component {\n  state = {\n    albums: [],\n    name: '',\n    nameAlbum: '',\n    loading: false,\n    favorite: [],\n  };\n\n  async componentDidMount() {\n    this.albumMusics();\n  }\n\n  albumMusics = async () => {\n    const { match: { params: { id } } } = this.props;\n    const music = await getMusics(id);\n    this.setState({\n      albums: music,\n      name: music[0].artistName,\n      nameAlbum: music[0].collectionName,\n    });\n  };\n\n  handleChange = (infoMusic) => {\n    this.setState({\n      loading: true,\n    }, async () => {\n      await addSong(infoMusic);\n      const listMusics = await getFavoriteSongs();\n      this.setState({\n        loading: false,\n        favorite: listMusics,\n      });\n    });\n  };\n\n  render() {\n    const { albums, name, nameAlbum, loading, favorite } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <p data-testid=\"artist-name\">{name}</p>\n        <p data-testid=\"album-name\">{nameAlbum}</p>\n        {loading ? <Loading /> : (\n          <section>\n            {albums.map((infoMusic) => (\n              <div key={ infoMusic.trackId }>\n                {infoMusic.previewUrl !== undefined && (\n                  <MusicCard\n                    infoMusic={ infoMusic }\n                    handleChange={ () => this.handleChange(infoMusic) }\n                    check={ favorite.some((music) => (\n                      infoMusic.trackId === music.trackId)) }\n                  />\n                )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\nexport default Album;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,OAAO,EAAEC,gBAAgB,QAAQ,8BAA8B;AAAC;AAEzE,MAAMC,KAAK,SAASR,KAAK,CAACS,SAAS,CAAC;EAAA;IAAA;IAAA,KAClCC,KAAK,GAAG;MACNC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE;IACZ,CAAC;IAAA,KAMDC,WAAW,GAAG,YAAY;MACxB,MAAM;QAAEC,KAAK,EAAE;UAAEC,MAAM,EAAE;YAAEC;UAAG;QAAE;MAAE,CAAC,GAAG,IAAI,CAACC,KAAK;MAChD,MAAMC,KAAK,GAAG,MAAMlB,SAAS,CAACgB,EAAE,CAAC;MACjC,IAAI,CAACG,QAAQ,CAAC;QACZX,MAAM,EAAEU,KAAK;QACbT,IAAI,EAAES,KAAK,CAAC,CAAC,CAAC,CAACE,UAAU;QACzBV,SAAS,EAAEQ,KAAK,CAAC,CAAC,CAAC,CAACG;MACtB,CAAC,CAAC;IACJ,CAAC;IAAA,KAEDC,YAAY,GAAIC,SAAS,IAAK;MAC5B,IAAI,CAACJ,QAAQ,CAAC;QACZR,OAAO,EAAE;MACX,CAAC,EAAE,YAAY;QACb,MAAMR,OAAO,CAACoB,SAAS,CAAC;QACxB,MAAMC,UAAU,GAAG,MAAMpB,gBAAgB,EAAE;QAC3C,IAAI,CAACe,QAAQ,CAAC;UACZR,OAAO,EAAE,KAAK;UACdC,QAAQ,EAAEY;QACZ,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;EAAA;EAzBD,MAAMC,iBAAiB,GAAG;IACxB,IAAI,CAACZ,WAAW,EAAE;EACpB;EAyBAa,MAAM,GAAG;IACP,MAAM;MAAElB,MAAM;MAAEC,IAAI;MAAEC,SAAS;MAAEC,OAAO;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACL,KAAK;IACjE,oBACE;MAAK,eAAY,YAAY;MAAA,wBAC3B,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV;QAAG,eAAY,aAAa;QAAA,UAAEE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACvC;QAAG,eAAY,YAAY;QAAA,UAAEC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAK,EAC1CC,OAAO,gBAAG,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,gBACpB;QAAA,UACGH,MAAM,CAACmB,GAAG,CAAEJ,SAAS,iBACpB;UAAA,UACGA,SAAS,CAACK,UAAU,KAAKC,SAAS,iBACjC,QAAC,SAAS;YACR,SAAS,EAAGN,SAAW;YACvB,YAAY,EAAG,MAAM,IAAI,CAACD,YAAY,CAACC,SAAS,CAAG;YACnD,KAAK,EAAGX,QAAQ,CAACkB,IAAI,CAAEZ,KAAK,IAC1BK,SAAS,CAACQ,OAAO,KAAKb,KAAK,CAACa,OAAQ;UAAG;YAAA;YAAA;YAAA;UAAA;QAE5C,GARQR,SAAS,CAACQ,OAAO;UAAA;UAAA;UAAA;QAAA,QAU7B;MAAC;QAAA;QAAA;QAAA;MAAA,QAEL;IAAA;MAAA;MAAA;MAAA;IAAA,QACG;EAEV;AACF;AAEA1B,KAAK,CAAC2B,SAAS,GAAG;EAChBlB,KAAK,EAAEhB,SAAS,CAACmC,KAAK,CAAC;IACrBlB,MAAM,EAAEjB,SAAS,CAACmC,KAAK,CAAC;MACtBjB,EAAE,EAAElB,SAAS,CAACoC,MAAM,CAACC;IACvB,CAAC;EACH,CAAC,CAAC,CAACA;AACL,CAAC;AACD,eAAe9B,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}